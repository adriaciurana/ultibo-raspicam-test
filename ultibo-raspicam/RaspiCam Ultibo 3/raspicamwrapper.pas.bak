unit RaspiCamWrapper;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, CTypes;

type Raspicam = type pointer;
Image = record
      data: ^uint8;
      length: uint32;
      format: uint8;
      width: uint32;
      height: uint32;
end;
ptrImage = ^Image; {type pointer;}

function newRaspiCam: Raspicam; cdecl;
procedure RaspiCam_release(handle: Raspicam); cdecl;
procedure deleteRaspiCam(handle: Raspicam); cdecl;
function RaspiCam_startCapture(handle: Raspicam): cuint8; cdecl;
function RaspiCam_open(handle: Raspicam; start_capture: cuint8): cuint8; cdecl;
function RaspiCam_grab(handle: Raspicam): cuint8; cdecl;
function RaspiCam_getImageTypeSize(handle: Raspicam): uint32; cdecl;
function RaspiCam_retrieve(handle: Raspicam): ptrImage; cdecl;
function RaspiCam_save(image: ptrImage; filename: PChar): cuint8; cdecl;
procedure RaspiCam_treeSteps(handle: Raspicam); cdecl;

implementation
{$linklib libraspicam.a}
function newRaspiCam: Raspicam; cdecl; external 'libraspicam' name 'newRaspiCam';
procedure RaspiCam_release(handle: Raspicam); cdecl; external 'libraspicam' name 'RaspiCam_release';
procedure deleteRaspiCam(handle: Raspicam); cdecl; external 'libraspicam' name 'deleteRaspiCam';
function RaspiCam_startCapture(handle: Raspicam): cuint8; cdecl; external 'libraspicam' name 'RaspiCam_startCapture';
function RaspiCam_open(handle: Raspicam; start_capture: cuint8) : cuint8; cdecl; external 'libraspicam' name 'RaspiCam_open';
function RaspiCam_grab(handle: Raspicam): cuint8; cdecl; external 'libraspicam' name 'RaspiCam_grab';
function RaspiCam_getImageTypeSize(handle: Raspicam): uint32; cdecl; external 'libraspicam' name 'RaspiCam_getImageTypeSize';
function RaspiCam_retrieve(handle: Raspicam): ptrImage; cdecl; external 'libraspicam' name 'RaspiCam_retrieve';
function RaspiCam_save(image: ptrImage; filename: PChar): cuint8; cdecl; external 'libraspicam' name 'RaspiCam_save';
procedure RaspiCam_treeSteps(handle: Raspicam); cdecl; external 'libraspicam' name 'RaspiCam_treeSteps';
end.

